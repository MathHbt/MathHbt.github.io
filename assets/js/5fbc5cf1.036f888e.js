"use strict";(self.webpackChunkdoc_elixir=self.webpackChunkdoc_elixir||[]).push([[207],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),o=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=o(n),c=r,k=u["".concat(p,".").concat(c)]||u[c]||m[c]||l;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:r,i[1]=s;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},7480:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>l,metadata:()=>s,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:3,sidebar_label:"Mini-Project #1 - API (serveur)"},i="Mini-Project #1 - API (Phoenix Framework - Elixir - Rest API)",s={unversionedId:"api",id:"api",title:"Mini-Project #1 - API (Phoenix Framework - Elixir - Rest API)",description:"1 - API (Phoenix Framework - Elixir - Rest API)",source:"@site/docs/api.md",sourceDirName:".",slug:"/api",permalink:"/docs/api",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/api.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Mini-Project #1 - API (serveur)"},sidebar:"docs",previous:{title:"Pr\xe9requis",permalink:"/docs/prerequisites"},next:{title:"Mini-Project #2 - Frontend (client)",permalink:"/docs/frontend"}},p={},o=[{value:"Initalisation du projet",id:"initalisation-du-projet",level:2},{value:"Cr\xe9ation des sch\xe9mas",id:"cr\xe9ation-des-sch\xe9mas",level:2},{value:"D\xe9finition du router",id:"d\xe9finition-du-router",level:2},{value:"Customisation des routes",id:"customisation-des-routes",level:2},{value:"Filtrage du r\xe9sultat pour matcher un param\xe8tre d&#39;URL",id:"filtrage-du-r\xe9sultat-pour-matcher-un-param\xe8tre-durl",level:3},{value:"Ajout d&#39;un param\xe8tre d&#39;URL \xe0 un body pour insertion",id:"ajout-dun-param\xe8tre-durl-\xe0-un-body-pour-insertion",level:3},{value:"CORS (Cross Origin Resource Sharing)",id:"cors-cross-origin-resource-sharing",level:2},{value:"Ajout de la d\xe9pendance cors_plug",id:"ajout-de-la-d\xe9pendance-cors_plug",level:3},{value:"Mise en place de CORSPlug",id:"mise-en-place-de-corsplug",level:3},{value:"Configuration de CORSPlug",id:"configuration-de-corsplug",level:3},{value:"API references",id:"api-references",level:2},{value:"\u2713 Users API",id:"-users-api",level:3},{value:"R\xe9cuperer tous les utilisateurs",id:"r\xe9cuperer-tous-les-utilisateurs",level:4},{value:"Requ\xeate HTTP",id:"requ\xeate-http",level:5},{value:"R\xe9ponse HTTP",id:"r\xe9ponse-http",level:5},{value:"R\xe9cuperer un utilisateur",id:"r\xe9cuperer-un-utilisateur",level:4},{value:"Requ\xeate HTTP",id:"requ\xeate-http-1",level:5},{value:"R\xe9ponse HTTP",id:"r\xe9ponse-http-1",level:5},{value:"Cr\xe9er un utilisateur",id:"cr\xe9er-un-utilisateur",level:4},{value:"Requ\xeate HTTP",id:"requ\xeate-http-2",level:5},{value:"R\xe9ponse HTTP",id:"r\xe9ponse-http-2",level:5},{value:"Modifier un utilisateur",id:"modifier-un-utilisateur",level:4},{value:"Requ\xeate HTTP",id:"requ\xeate-http-3",level:5},{value:"R\xe9ponse HTTP",id:"r\xe9ponse-http-3",level:5},{value:"Supprimer un utilisateur",id:"supprimer-un-utilisateur",level:4},{value:"R\xe9ponse HTTP",id:"r\xe9ponse-http-4",level:5},{value:"\u2713 WorkingTime API",id:"-workingtime-api",level:3},{value:"R\xe9cuperer tous les workingtimes",id:"r\xe9cuperer-tous-les-workingtimes",level:4},{value:"R\xe9cuperer un workingtime",id:"r\xe9cuperer-un-workingtime",level:4},{value:"Cr\xe9er un workingtime",id:"cr\xe9er-un-workingtime",level:4},{value:"Modifier un workingtime",id:"modifier-un-workingtime",level:4},{value:"Supprimer un workingtime",id:"supprimer-un-workingtime",level:4},{value:"\u2713 Clock API",id:"-clock-api",level:3},{value:"R\xe9cuperer les clocks",id:"r\xe9cuperer-les-clocks",level:4},{value:"Cr\xe9er une clock",id:"cr\xe9er-une-clock",level:4},{value:"Tests",id:"tests",level:2},{value:"Lancement des tests",id:"lancement-des-tests",level:3},{value:"R\xe9daction des tests",id:"r\xe9daction-des-tests",level:3},{value:"Imports requis",id:"imports-requis",level:4},{value:"D\xe9claration des constantes de test",id:"d\xe9claration-des-constantes-de-test",level:4},{value:"Corps du test",id:"corps-du-test",level:4},{value:"Exemple avec un CRUD",id:"exemple-avec-un-crud",level:4}],d={toc:o},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"mini-project-1---api-phoenix-framework---elixir---rest-api"},"Mini-Project #1 - API (Phoenix Framework - Elixir - Rest API)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Objectif :")," R\xe9aliser une API REST pour g\xe9rer une pointeuse"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Contraintes :")," Utilisation de Phoenix Framework - Routes et sch\xe9mas impos\xe9s - Base de donn\xe9es PostgreSQL"),(0,r.kt)("h2",{id:"initalisation-du-projet"},"Initalisation du projet"),(0,r.kt)("p",null,"Initalisation et acc\xe8s au projet :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mix phx.new api --app api --no-html --no-assets\ncd api/\n")),(0,r.kt)("p",null,"Installation des d\xe9pendances :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mix deps.get\n")),(0,r.kt)("p",null,"Execution des migrations / Mise en place de la base de donn\xe9es :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mix ecto.reset\n")),(0,r.kt)("p",null,"Lancer le projet :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mix phx.server\n")),(0,r.kt)("p",null,"Le projet est d\xe9sormais accessible \xe0 l'url ",(0,r.kt)("a",{parentName:"p",href:"http://localhost:4000"},"http://localhost:4000")),(0,r.kt)("h2",{id:"cr\xe9ation-des-sch\xe9mas"},"Cr\xe9ation des sch\xe9mas"),(0,r.kt)("p",null,"La commande permettant de cr\xe9er un sch\xe9ma JSON est la suivante :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mix phx.gen.json [context] [schema_name] [table_name] [field:type, ...]\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'users = {\n  "username": "string",\n  "email": "string"\n}\n\nclocks = {\n  "time": "datetime",\n  "status": "boolean",\n  "user": "users"\n}\n\nworkingtimes = {\n  "start": "datetime",\n  "end": "datetime",\n  "user": "users"\n}\n')),(0,r.kt)("p",null,"Nous g\xe9n\xe9rons les sch\xe9mas ci-dessus avec les commandes suivantes :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"mix phx.gen.json ApiWeb User users username:string email:string\nmix phx.gen.json ApiWeb Clock clocks time:datetime status:boolean user:references:users\nmix phx.gen.json ApiWeb WorkingTime workingtimes start:datetime end:datetime user:references:users\n")),(0,r.kt)("h2",{id:"d\xe9finition-du-router"},"D\xe9finition du router"),(0,r.kt)("p",null,"Le router permet de rediriger les appels vers le bon Controller (Architechture MVC), la ligne suivante permet de 'bind' une route \xe0 un controller :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'resources "/workingtimes", WorkingTimesController, only: [:update, :delete]\n')),(0,r.kt)("p",null,'Le fichier "api/lib/api_web/router.ex" :'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'defmodule ApiWeb.Router do\n  use ApiWeb, :router\n\n  pipeline :api do\n    plug :accepts, ["json"] # incoming type accepted\n  end\n\n  scope "/api", ApiWeb do\n    pipe_through :api\n\n    # Links /users/* calls to UsersController file\n    resources "/users", UsersController, only: [:index, :show, :create, :update, :delete] \n    resources "/workingtimes", WorkingTimesController, only: [:update, :delete]\n    resources "/workingtimes/:userID", WorkingTimesController, only: [:index, :show, :create]\n    resources "/clocks/:userID", ClocksController, only: [:index, :create]\n  end\n\n  [...]\nend\n\n')),(0,r.kt)("h2",{id:"customisation-des-routes"},"Customisation des routes"),(0,r.kt)("p",null,"Les routes par sont par d\xe9faut pr\xe9-g\xe9n\xe9r\xe9es, mais dans notre cas plusieurs modifications ont \xe9t\xe9 apport\xe9es pour s'adapter au sujet."),(0,r.kt)("h3",{id:"filtrage-du-r\xe9sultat-pour-matcher-un-param\xe8tre-durl"},"Filtrage du r\xe9sultat pour matcher un param\xe8tre d'URL"),(0,r.kt)("p",null,"Pour l'insertion d'une clock il faut le user_id, nous avons surcharg\xe9 la fonction de base index() qui permet de r\xe9cuperer l'ensemble des Clock pour qu'elle puisse traiter les cas avec/sans userID."),(0,r.kt)("p",null,"Nous rajoutons au dessus notre fonction appel\xe9e si le parametre d'url userID est renseign\xe9 :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'# endpoint : {base_url}/clocks/:userID, method : GET\ndef index(conn, %{"userID" => userID}) do\n  userID = String.to_integer(userID)\n  clocks = WebApi.list_clocks()\n  filtered_users = Enum.filter(clocks, fn clock -> clock.user == userID end)\n  render(conn, :index, clocks: filtered_users)\nend\n\n# endpoint : {base_url}/clocks, method : GET\ndef index(conn, _params) do\n  clocks = WebApi.list_clocks()\n  render(conn, :index, clocks: clocks)\nend\n')),(0,r.kt)("h3",{id:"ajout-dun-param\xe8tre-durl-\xe0-un-body-pour-insertion"},"Ajout d'un param\xe8tre d'URL \xe0 un body pour insertion"),(0,r.kt)("p",null,"Lors de l'insertion d'une Clock, on pr\xe9cise dans l'url le user_id associ\xe9, il faut rajouter ce champ au body pour pouvoir l'envoyer et l'ins\xe9rer dans la base de donn\xe9es"),(0,r.kt)("p",null,"Le body \xe9tant de type Map, on peut utiliser les fonctions fournies par cette classe :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'# Ajoute le champ "user": ${userID} \xe0 l\'objet clocks_params\nclocks_params = Map.put(clocks_params, "user", userID)\n')),(0,r.kt)("p",null,"La fonction create() compl\xe8te :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'def create(conn, %{"clocks" => clocks_params, "userID" => userID}) do\n  clocks_params = Map.put(clocks_params, "user", userID)\n  with {:ok, %Clocks{} = clocks} <- WebApi.create_clocks(clocks_params) do\n    conn\n    |> put_status(:created)\n    |> put_resp_header("location", ~p"/api/clocks/#{clocks}")\n    |> render(:show, clocks: clocks)\n  end\nend\n')),(0,r.kt)("h2",{id:"cors-cross-origin-resource-sharing"},"CORS (Cross Origin Resource Sharing)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://hexdocs.pm/cors_plug/readme.html"},"Tutoriel Phoenix officiel"))),(0,r.kt)("h3",{id:"ajout-de-la-d\xe9pendance-cors_plug"},"Ajout de la d\xe9pendance cors_plug"),(0,r.kt)("p",null,"Dans le fichier ",(0,r.kt)("em",{parentName:"p"},"mix.exs")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'def deps do\n  # ...\n  {:cors_plug, "~> 3.0"},\n  #...\nend\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"# Fetch new cors dependency\n$ mix deps.get\n")),(0,r.kt)("h3",{id:"mise-en-place-de-corsplug"},"Mise en place de CORSPlug"),(0,r.kt)("p",null,"Dans le fichier ",(0,r.kt)("em",{parentName:"p"},"your_app/lib/api_web/endpoint.ex")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},"defmodule ApiWeb.Endpoint do\n  use Phoenix.Endpoint, otp_app: :api\n\n  # [...]\n\n  plug CORSPlug # => Enables CORS server-side\n  plug ApiWeb.Router\nend\n")),(0,r.kt)("h3",{id:"configuration-de-corsplug"},"Configuration de CORSPlug"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'plug CORSPlug, origin: ["http://origin1.com", "http://origin2.com"]\n')),(0,r.kt)("h2",{id:"api-references"},"API references"),(0,r.kt)("h3",{id:"-users-api"},"\u2713 Users API"),(0,r.kt)("h4",{id:"r\xe9cuperer-tous-les-utilisateurs"},"R\xe9cuperer tous les utilisateurs"),(0,r.kt)("h5",{id:"requ\xeate-http"},"Requ\xeate HTTP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  GET http://localhost:4000/api/users\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"email"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Optionnel"),". L'email de l'utilisateur")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"username"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Optionnel"),". L'username de l'utilisateur")))),(0,r.kt)("h5",{id:"r\xe9ponse-http"},"R\xe9ponse HTTP"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Statut"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Raison"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"200 OK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Succ\xe8s")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'  HTTP/1.1 200\n  Content-Type: application/json\n\n{\n  "data": [\n      {\n          "id": 34,\n          "username": "test",\n          "email": "test@test.fr"\n      },\n      {\n          "id": 35,\n          "username": "test",\n          "email": "test@test.fr"\n      }\n  ]\n}\n')),(0,r.kt)("h4",{id:"r\xe9cuperer-un-utilisateur"},"R\xe9cuperer un utilisateur"),(0,r.kt)("h5",{id:"requ\xeate-http-1"},"Requ\xeate HTTP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  GET  http://localhost:4000/api/users/:userID\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Id technique de l'utilisateur")))),(0,r.kt)("h5",{id:"r\xe9ponse-http-1"},"R\xe9ponse HTTP"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Statut"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Raison"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"200 OK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Succ\xe8s")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"404 Not Found"),(0,r.kt)("td",{parentName:"tr",align:"left"},"userID inexistant")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'  HTTP/1.1 200\n  Content-Type: application/json\n\n{\n  "data": {\n      "id": 34,\n      "username": "test",\n      "email": "test@test.fr"\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"  HTTP/1.1 404\n  Content-Type: text/html\n")),(0,r.kt)("h4",{id:"cr\xe9er-un-utilisateur"},"Cr\xe9er un utilisateur"),(0,r.kt)("h5",{id:"requ\xeate-http-2"},"Requ\xeate HTTP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  POST  http://localhost:4000/api/users\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"username"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Nom d'utilisateur du nouvel utilisateur")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"email"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Adresse email du nouvel utilisateur")))),(0,r.kt)("h5",{id:"r\xe9ponse-http-2"},"R\xe9ponse HTTP"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Statut"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Raison"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"201 Created"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cr\xe9ation r\xe9ussie")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"400 Bad Request"),(0,r.kt)("td",{parentName:"tr",align:"left"},"username et/ou email manquant")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'  HTTP/1.1 201\n  Content-Type: application/json\n\n{\n  "data": {\n      "id": 37,\n      "username": "test",\n      "email": "romain.rosso@epitech.eu"\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"  HTTP/1.1 400\n  Content-Type: text/html\n")),(0,r.kt)("h4",{id:"modifier-un-utilisateur"},"Modifier un utilisateur"),(0,r.kt)("h5",{id:"requ\xeate-http-3"},"Requ\xeate HTTP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  PUT  http://localhost:4000/api/users/:userID\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Id technique de l'utilisateur \xe0 modifier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"username"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Nouveau nom d'utilisateur")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"email"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Nouvelle adresse email")))),(0,r.kt)("h5",{id:"r\xe9ponse-http-3"},"R\xe9ponse HTTP"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Statut"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Raison"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"201 Created"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cr\xe9ation r\xe9ussie")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"400 Bad Request"),(0,r.kt)("td",{parentName:"tr",align:"left"},"username et/ou email manquant")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'  HTTP/1.1 201\n  Content-Type: application/json\n\n{\n  "data": {\n      "id": 37,\n      "username": "test",\n      "email": "romain.rosso@epitech.eu"\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"  HTTP/1.1 400\n  Content-Type: text/html\n")),(0,r.kt)("h4",{id:"supprimer-un-utilisateur"},"Supprimer un utilisateur"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  DELETE  http://localhost:4000/api/users/:userID\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Id technique de l'utilisateur \xe0 supprimer")))),(0,r.kt)("h5",{id:"r\xe9ponse-http-4"},"R\xe9ponse HTTP"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Statut"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Raison"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"200 OK"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Cr\xe9ation r\xe9ussie")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"400 Bad Request"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body manquant")))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},'  HTTP/1.1 200\n  Content-Type: application/json\n\n{\n  "data": {\n      "id": 37,\n      "username": "test",\n      "email": "romain.rosso@epitech.eu"\n  }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"  HTTP/1.1 400\n  Content-Type: text/html\n")),(0,r.kt)("h3",{id:"-workingtime-api"},"\u2713 WorkingTime API"),(0,r.kt)("h4",{id:"r\xe9cuperer-tous-les-workingtimes"},"R\xe9cuperer tous les workingtimes"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  GET http://localhost:4000/api/workingtimes/:userID?start=XXX&end=YYY\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". L'identifiant technique de l'utilisateur associ\xe9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"start"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime - (format : dd-MM-yyyy)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Optionnel"),". La date \xe0 partir de laquelle chercher")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime - (format: dd-MM-yyyy)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Optionnel"),". La date avant laquelle chercher")))),(0,r.kt)("h4",{id:"r\xe9cuperer-un-workingtime"},"R\xe9cuperer un workingtime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  GET  http://localhost:4000/api/workingtimes/:userID/:id\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Id technique de l'utilisateur associ\xe9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Id technique du workingtime \xe0 r\xe9cuperer")))),(0,r.kt)("h4",{id:"cr\xe9er-un-workingtime"},"Cr\xe9er un workingtime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  POST  http://localhost:4000/api/workingtimes/:userID\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Identifiant technique de l'utilisateur associ\xe9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"start"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime - (format : dd-MM-yyyy)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Date de d\xe9but")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime - (format : dd-MM-yyyy)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Date de fin")))),(0,r.kt)("h4",{id:"modifier-un-workingtime"},"Modifier un workingtime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  PUT  http://localhost:4000/api/workingtimes/:id\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Id technique du workingtime \xe0 modifier")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"start"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime - (format : dd-MM-yyyy)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Date de d\xe9but")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"end"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"datetime - (format : dd-MM-yyyy)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Date de fin")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"user"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Utilisateur associ\xe9")))),(0,r.kt)("h4",{id:"supprimer-un-workingtime"},"Supprimer un workingtime"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  DELETE  http://localhost:4000/api/workingtimes/:id\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"id"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"integer - uid")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Id technique du workingtime \xe0 supprimer")))),(0,r.kt)("h3",{id:"-clock-api"},"\u2713 Clock API"),(0,r.kt)("h4",{id:"r\xe9cuperer-les-clocks"},"R\xe9cuperer les clocks"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  GET http://localhost:4000/api/clocks/:userID\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". L'identifiant technique de l'utilisateur associ\xe9")))),(0,r.kt)("h4",{id:"cr\xe9er-une-clock"},"Cr\xe9er une clock"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-http"},"  POST http://localhost:4000/api/clocks/:userID\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type technique"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type de param\xe8tre"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"userID"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"string")),(0,r.kt)("td",{parentName:"tr",align:"left"},"URL"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". L'identifiant technique de l'utilisateur associ\xe9")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"time"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},'datetime - (format : "dd-MM-yyyy")')),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". L'heure de la clock")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"status"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"boolean")),(0,r.kt)("td",{parentName:"tr",align:"left"},"Body"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Obligatoire"),". Le status de la clock")))),(0,r.kt)("h2",{id:"tests"},"Tests"),(0,r.kt)("h3",{id:"lancement-des-tests"},"Lancement des tests"),(0,r.kt)("p",null,"Phoenix permet de r\xe9diger des tests avec une syntaxe particuli\xe8re assez r\xe9p\xe9titive et simple \xe0 assimiler"),(0,r.kt)("p",null,"La commande ci-dessous permet de lancer les test :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"mix test\n")),(0,r.kt)("h3",{id:"r\xe9daction-des-tests"},"R\xe9daction des tests"),(0,r.kt)("p",null,"Pour r\xe9diger les tests en Phoenix, nous allons dans le dossier ",(0,r.kt)("em",{parentName:"p"},"your_app/test/api_web/controllers"),", un fichier par controller est d\xe9j\xe0 pr\xe9-g\xe9n\xe9r\xe9, nous allons les supprimer pour r\xe9diger les tests selon les specificit\xe9s ad\xe9quates"),(0,r.kt)("p",null,"Cr\xe9er un fichier ",(0,r.kt)("strong",{parentName:"p"},"users_controller_test.exs")),(0,r.kt)("h4",{id:"imports-requis"},"Imports requis"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},"# ConnCase to use database connection\nuse ApiWeb.ConnCase, async: false\n\n# WebApiFixtures to generate fake data\nimport Api.WebApiFixtures\n\n# Users model since we are building users_controller_test.exs\nalias Api.WebApi.Users\n")),(0,r.kt)("h4",{id:"d\xe9claration-des-constantes-de-test"},"D\xe9claration des constantes de test"),(0,r.kt)("p",null,"Il est possible de cr\xe9er des objets (JSON) contenant des constantes qui seront utilis\xe9es pour les tests"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'@create_attrs %{\n  username: "dummy username",\n  email: "dummy@gmail.com"\n}\n\n@update_attrs %{\n  username: "dummy new username",\n  email: "newdummy@gmail.com"\n}\n\n@invalid_attrs %{\n  username: nil,\n  email: nil\n}\n\n@invalid_email %{\n  username: "any username",\n  email: "i have wrong format"\n}\n')),(0,r.kt)("h4",{id:"corps-du-test"},"Corps du test"),(0,r.kt)("p",null,"Pour r\xe9diger un test, il faut ouvrir un block ",(0,r.kt)("strong",{parentName:"p"},"test")),(0,r.kt)("p",null,"Les diff\xe9rentes routes peuvent \xeatre test\xe9es gr\xe2ce \xe0 cet appel :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'# method GET\nconn = get(conn, ~p"/api/users/#{userID}")\n\n# method POST\nconn = post(conn, ~p"/api/users", users: @create_attrs)\n\n# method PUT\nconn = put(conn, ~p"/api/users/#{userID}", users: @update_attrs)\n\n# method DELETE\nconn = delete(conn, ~p"/api/users/#{userID}")\n')),(0,r.kt)("p",null,"Les traitements de resultat se font via des assertions similaires aux autres langages (comme JUnit par exemple) :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'\n# Declare constants for incoming tests\n@create_attrs %{\n  username: "dummy username",\n  email: "dummy@gmail.com"\n}\n\n# Describe the test\ntest "| Should return 201 and a data field containing inserted user after inserting a user with correct body", %{conn: conn} do\n\n  # API self call, method: POST\n  conn = post(conn, ~p"/api/users", users: @create_attrs)\n\n  # Asserting wether the result is the excpected one or not\n  assert json_response(conn, 201)["data"] == %{\n    "id" => userID,\n    "username"=> "dummy username",\n    "email" => "dummy@gmail.com"\n  }\nend\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'# declare a new test with it\'s description\ntest "| Should not create users and return 422 error because of invalid data", %{conn: conn} do\n\n  # API self call, method: POST\n  conn = post(conn, ~p"/api/users", users: @invalid_attrs)\n\n  # asserting wether the result is the excpected one or not\n  assert json_response(conn, 422)["errors"] != %{}\nend\n')),(0,r.kt)("h4",{id:"exemple-avec-un-crud"},"Exemple avec un CRUD"),(0,r.kt)("p",null,"Ci-dessous un ensemble de test qui permet de valider le bon fonctionnement d'une table User ainsi que de son CRUD avec le sch\xe9ma suivant :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript"},"type User = {\n  id: integer,\n  username: string,\n  email: string\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-elixir"},'defmodule ApiWeb.UsersControllerTest do\n  use ApiWeb.ConnCase, async: false\n\n  import Api.WebApiFixtures\n\n  alias Api.WebApi.Users\n\n  @create_attrs %{\n    username: "dummy username",\n    email: "dummy@gmail.com"\n  }\n\n  @update_attrs %{\n    username: "dummy new username",\n    email: "newdummy@gmail.com"\n  }\n\n  @invalid_attrs %{username: nil, email: nil}\n\n  @invalid_email %{username: "any username", email: "i have wrong format"}\n\n  setup %{conn: conn} do\n    {:ok, conn: put_req_header(conn, "accept", "application/json")}\n  end\n\n  describe "\u2713 Testing Users" do\n\n    setup [:create_users]\n\n    test "| Should return an array named data with status code 200", %{conn: conn} do\n      conn = get(conn, ~p"/api/users")\n      assert json_response(conn, 200)["data"]\n    end\n\n    test "| Should create user and return it\'s datas", %{conn: conn} do\n      conn = post(conn, ~p"/api/users", users: @create_attrs)\n      assert %{"id" => id} = json_response(conn, 201)["data"]\n\n      conn = get(conn, ~p"/api/users/#{id}")\n\n      assert %{\n               "id" => ^id,\n               "email" => "dummy@gmail.com",\n               "username" => "dummy username"\n             } = json_response(conn, 200)["data"]\n    end\n\n    test "| Should not create users and return 422 error because of invalid data", %{conn: conn} do\n      conn = post(conn, ~p"/api/users", users: @invalid_attrs)\n      assert json_response(conn, 422)["errors"] != %{}\n    end\n\n    test "| Should renders user when data is valid", %{conn: conn, users: %Users{id: id} = users} do\n      conn = put(conn, ~p"/api/users/#{users}", users: @update_attrs)\n      assert %{"id" => ^id} = json_response(conn, 200)["data"]\n\n      conn = get(conn, ~p"/api/users/#{id}")\n\n      assert %{\n               "id" => ^id,\n               "email" => "newdummy@gmail.com",\n               "username" => "dummy new username"\n             } = json_response(conn, 200)["data"]\n    end\n\n    test "| Should throw 422 if data is missing", %{conn: conn, users: users} do\n      conn = put(conn, ~p"/api/users/#{users}", users: @invalid_attrs)\n\n      assert json_response(conn, 422)["errors"] != %{\n               email: "can\'t be blank",\n               username: "can\'t be blank"\n             }\n    end\n\n    test "| Should warn that email format is invalid", %{conn: conn, users: users} do\n      conn = put(conn, ~p"/api/users/#{users}", users: @invalid_email)\n\n      assert json_response(conn, 422)["errors"] != %{\n               email: "can\'t be blank",\n               username: "can\'t be blank"\n             }\n    end\n\n    setup [:create_users]\n\n    test "| Should deletes user by id", %{conn: conn, users: users} do\n      conn = delete(conn, ~p"/api/users/#{users}")\n      assert response(conn, 200)\n\n      assert_error_sent(404, fn ->\n        get(conn, ~p"/api/users/#{users}")\n      end)\n    end\n  end\n\n  defp create_users(_) do\n    users = users_fixture()\n    %{users: users}\n  end\nend\n')))}m.isMDXComponent=!0}}]);